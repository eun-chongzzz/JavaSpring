<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http:/mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 위의 스키마 작성후, 어떤 인터페이스의 메서드를 쿼리문과
연결해 줄기 아래와 같이 인터페이스 파일부터 mapper태그로 연결합니다. -->

<mapper namespace="com.ict.mapper.BoardMapper">
			
			<!-- 조건에 따른 쿼리문이 가변적으로 추가될 부분 
			이 쿼리문을 돌리면서 SearchCriteria를 돌리고 있으므로
			SearchCriteria.searchType을 아래처럼 변수명만 적어 감지가 됨
			
			상단의 sql태그를 이용해 명칭을 부여했으므로, 명칭만 맞추면 긴 내용을 다 넣지 않아도 됨-->
			<sql id="search">
				<if test="searchType != null">
					<if test="searchType == 't'.toString()">
						(Title like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'c'.toString()">
						(Content like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'w'.toString()">
						(Writer like '%'||#{keyword}||'%') AND
					</if>
					<if test="searchType == 'tc'.toString()">
						((Title like '%'||#{keyword}||'%')
							or
						(Content like '%'||#{keyword}||'%')) AND
					</if>
					<if test="searchType == 'cw'.toString()">
						((Content like '%'||#{keyword}||'%')
							or
						(Writer like '%'||#{keyword}||'%')) AND
					</if>
					<if test="searchType == 'tcw'.toString()">
						((Title like '%'||#{keyword}||'%')
							or
						(Content like '%'||#{keyword}||'%')
							or
						(Writer like '%'||#{keyword}||'%')) AND
					</if>
				</if>	
			</sql>
			
	<!-- id속성에 BoardMapper에 적어둔 메서드 명을
	resultType에 리턴자료형인 BoardVO를 패키지부터 -->
	<select id="getList" resultType="com.ict.domain.BoardVO">
		<!-- 태그 여닫는 문자인 < >가 쿼리문 중간에 오는경우
		CDATA로 감싸서 해당 로직이 태그를 여닫기 위한 목적이 없음을 명시한다.  -->
		<![CDATA[
			SELECT * FROM
				(SELECT /*+ INDEX_DESC(board_tbl pk_board) */
				ROWNUM rn, board_tbl.* FROM board_tbl WHERE 
			]]>	
				
			<!-- 글 개수 조회구문에도 include태그로 입력 -->	
			<include refid="search"></include>
			
			<!-- 글 번호를 조절하기 위한 부분 -->	
		<![CDATA[		
				ROWNUM <= #{pageEnd})
					WHERE rn > #{pageStart}
		]]>
		<!-- getter는 #{} 내부에 호출가능함
		get을 뺀 나머지 메서드명을 적어주면 됨.
		맨 앞글자는 소문자 -->
	</select>
	
	<!-- board_tbl의 전체 글 갯수 -->
	<select id="countPageNum" resultType="int">
		<![CDATA[
			SELECT COUNT(*) FROM board_tbl WHERE
		]]>
		
			<include refid="search"></include>
			
		<![CDATA[
			bno > 0
		]]>
	</select>
	
	
	
	<!-- insert 구문이므로 insert태그를 써야 하고 리턴자료가 없으니 자연히 resultType도 작성안합니다.
	BoardVO를 입력받지만 #{} 내부에는 vo.변수명이 아닌 그냥 변수명을 그대로 써주시면 됩니다. -->
	<insert id="insert">
	
		<!-- bno는 board_num.nextval이 실행되기 전까지 몇 번인지 알 수 없으므로
		미리 vo에 bno를 추가하기 위해서는 아래 INSERT구문 실행 이전에 먼저 글번호가 몇번일지
		조회하는 쿼리문이 실행되어야 함 -->
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			SELECT board_num.nextval from dual
		</selectKey>
		
		
		INSERT INTO board_tbl (bno, title, content, writer)
			VALUES
		(#{bno}, #{title}, #{content}, #{writer})
	</insert>
	
	
	<!-- 특정 글 번호를 입력받아 콘솔에 찍어주는 메서드 select를 작성 -->
	<select id="select" resultType="com.ict.domain.BoardVO">
		SELECT * FROM board_tbl WHERE bno = #{bno}
	</select>
	
	<!-- BoardMapper.java의 delete 메서드를 연결해 해당 메서드 실행시 실행될 쿼리문 작성 -->
	<delete id="delete">
		DELETE FROM board_tbl WHERE bno = #{bno}
	</delete>
	
	<!-- BoardMapper.java의 update 메서드를 연결해 해당 메서드 실행시 실행될 쿼리문 작성 -->
	<update id="update">
		UPDATE board_tbl SET title = #{title}, content = #{content}, updatedate = sysdate WHERE bno = #{bno}
	</update>
	
	
	<!-- BoardMapper.java의 update 메서드를 연결해 해당 메서드 실행시 실행될 쿼리문 작성 -->
	<update id="update2">
		UPDATE board_tbl SET title = #{title}, content = #{content}, updatedate = sysdate WHERE bno = #{bno}
	</update>
	
	<!-- 댓글 갱신 쿼리 -->
	<update id="updateReplyCount">
		UPDATE board_tbl
			SET
		replycount = replycount + #{amount} where bno = #{bno}
	</update>
	
</mapper>